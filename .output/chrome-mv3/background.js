var background=(function(){"use strict";function l(e){return e==null||typeof e=="function"?{main:e}:e}const n=globalThis.browser?.runtime?.id?globalThis.browser:globalThis.chrome,u=l(()=>{console.log("Hello background!",{id:n.runtime.id}),n.runtime.onMessage.addListener(async e=>{if(e.type==="LOGIN")try{const r="https://formfill-auth.auth.us-east-1.amazoncognito.com",h="6bj9qs4trivcf0h1u2kfnm4n1j",m=chrome.identity.getRedirectURL("callback"),g=`${r}/oauth2/authorize?response_type=token&client_id=${h}&redirect_uri=${encodeURIComponent(m)}&scope=openid+email+profile`,b=await new Promise((f,w)=>{chrome.identity.launchWebAuthFlow({url:g,interactive:!0},a=>{chrome.runtime.lastError||!a?w(chrome.runtime.lastError):f(a)})}),c=new URLSearchParams(new URL(b).hash.substring(1)),i=c.get("id_token"),s=c.get("access_token");return console.log("Tokens received:",{idToken:i,accessToken:s}),await n.storage.local.set({idToken:i,accessToken:s}),{idToken:i,accessToken:s}}catch(r){return console.error("Login failed:",r),{error:String(r)}}})});function p(){}function o(e,...r){}const d={debug:(...e)=>o(console.debug,...e),log:(...e)=>o(console.log,...e),warn:(...e)=>o(console.warn,...e),error:(...e)=>o(console.error,...e)};let t;try{t=u.main(),t instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(e){throw d.error("The background crashed on startup!"),e}return t})();
